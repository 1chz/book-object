plugins {
    id 'org.springframework.boot' version '2.6.3'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'jacoco'
}

group = 'io.github.shirohoo'

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(17))
    }
}

jar {
    enabled(false)
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
    useJUnitPlatform()
}

ext {
    set('jacocoReports', file('src/main/resources/static/jacoco'))
}

jacocoTestReport {
    reports {
        html.enabled true
        xml.enabled false
        csv.enabled false

        html.destination file("$jacocoReports")
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            enabled = true
            element = 'CLASS'

            limit {
                counter = 'LINE'
                value = 'COVEREDRATIO'
                minimum = 0.50
            }

            limit {
                counter = 'LINE'
                value = 'TOTALCOUNT'
                maximum = 250
            }
        }
    }
}

task jacoco(type: Test) {
    group 'verification'
    dependsOn(
            ':jacocoTestReport',
            ':jacocoTestCoverageVerification'
    )
    tasks['jacocoTestCoverageVerification'].mustRunAfter(tasks['jacocoTestReport'])
}

bootJar {
    dependsOn(':jacoco')
}
